/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type SetTreeDelegateInstructionAccounts = {
    treeConfig?: PublicKey | Pda;
    treeCreator?: Signer;
    newTreeDelegate: PublicKey | Pda;
    merkleTree: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
};
export type SetTreeDelegateInstructionData = {
    discriminator: Array<number>;
};
export type SetTreeDelegateInstructionDataArgs = {};
/** @deprecated Use `getSetTreeDelegateInstructionDataSerializer()` without any argument instead. */
export declare function getSetTreeDelegateInstructionDataSerializer(_context: object): Serializer<SetTreeDelegateInstructionDataArgs, SetTreeDelegateInstructionData>;
export declare function getSetTreeDelegateInstructionDataSerializer(): Serializer<SetTreeDelegateInstructionDataArgs, SetTreeDelegateInstructionData>;
export declare function setTreeDelegate(context: Pick<Context, 'programs' | 'eddsa' | 'identity'>, input: SetTreeDelegateInstructionAccounts): TransactionBuilder;
