/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { MetadataArgs, MetadataArgsArgs } from '../types';
export type MintToCollectionV1InstructionAccounts = {
    treeConfig?: PublicKey | Pda;
    leafOwner: PublicKey | Pda;
    leafDelegate?: PublicKey | Pda;
    merkleTree: PublicKey | Pda;
    payer?: Signer;
    treeCreatorOrDelegate?: Signer;
    collectionAuthority?: Signer;
    /**
     * If there is no collecton authority record PDA then
     * this must be the Bubblegum program address.
     */
    collectionAuthorityRecordPda?: PublicKey | Pda;
    collectionMint: PublicKey | Pda;
    collectionMetadata?: PublicKey | Pda;
    collectionEdition?: PublicKey | Pda;
    bubblegumSigner?: PublicKey | Pda;
    logWrapper?: PublicKey | Pda;
    compressionProgram?: PublicKey | Pda;
    tokenMetadataProgram?: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
};
export type MintToCollectionV1InstructionData = {
    discriminator: Array<number>;
    metadata: MetadataArgs;
};
export type MintToCollectionV1InstructionDataArgs = {
    metadata: MetadataArgsArgs;
};
/** @deprecated Use `getMintToCollectionV1InstructionDataSerializer()` without any argument instead. */
export declare function getMintToCollectionV1InstructionDataSerializer(_context: object): Serializer<MintToCollectionV1InstructionDataArgs, MintToCollectionV1InstructionData>;
export declare function getMintToCollectionV1InstructionDataSerializer(): Serializer<MintToCollectionV1InstructionDataArgs, MintToCollectionV1InstructionData>;
export type MintToCollectionV1InstructionArgs = MintToCollectionV1InstructionDataArgs;
export declare function mintToCollectionV1(context: Pick<Context, 'programs' | 'eddsa' | 'identity' | 'payer'>, input: MintToCollectionV1InstructionAccounts & MintToCollectionV1InstructionArgs): TransactionBuilder;
