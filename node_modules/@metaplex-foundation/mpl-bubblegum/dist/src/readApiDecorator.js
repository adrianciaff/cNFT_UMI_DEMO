"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createReadApiDecorator = void 0;
const errors_1 = require("./errors");
const createReadApiDecorator = (rpc) => ({
    ...rpc,
    getAsset: async (assetId) => {
        const asset = await rpc.call('getAsset', [assetId]);
        if (!asset)
            throw new errors_1.ReadApiError(`Asset not found: ${assetId}`);
        return asset;
    },
    getAssetProof: async (assetId) => {
        const proof = await rpc.call('getAssetProof', [assetId]);
        if (!proof)
            throw new errors_1.ReadApiError(`No proof found for asset: ${assetId}`);
        return proof;
    },
    getAssetsByGroup: async (input) => {
        if (typeof input.page === 'number' && (input.before || input.after)) {
            throw new errors_1.ReadApiError('Pagination Error. Please use either page or before/after, but not both.');
        }
        const assetList = await rpc.call('getAssetsByGroup', [
            input.groupKey,
            input.groupValue,
            input.after ?? null,
            input.before ?? null,
            input.limit ?? null,
            input.page ?? 0,
            input.sortBy ?? null,
        ]);
        if (!assetList) {
            throw new errors_1.ReadApiError(`No assets found for group: ${input.groupKey} => ${input.groupValue}`);
        }
        return assetList;
    },
    getAssetsByOwner: async (input) => {
        if (typeof input.page === 'number' && (input.before || input.after)) {
            throw new errors_1.ReadApiError('Pagination Error. Please use either page or before/after, but not both.');
        }
        const assetList = await rpc.call('getAssetsByOwner', [
            input.owner,
            input.after ?? null,
            input.before ?? null,
            input.limit ?? null,
            input.page ?? 0,
            input.sortBy ?? null,
        ]);
        if (!assetList) {
            throw new errors_1.ReadApiError(`No assets found for owner: ${input.owner}`);
        }
        return assetList;
    },
});
exports.createReadApiDecorator = createReadApiDecorator;
//# sourceMappingURL=readApiDecorator.js.map