/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Option, OptionOrNullable, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { MigrationType, MigrationTypeArgs } from '../types';
export type MigrateV1InstructionAccounts = {
    /** Metadata account */
    metadata?: PublicKey | Pda;
    /** Edition account */
    edition?: PublicKey | Pda;
    /** Token account */
    token: PublicKey | Pda;
    /** Token account owner */
    tokenOwner: PublicKey | Pda;
    /** Mint account */
    mint: PublicKey | Pda;
    /** Payer */
    payer?: Signer;
    /** Update authority */
    authority?: Signer;
    /** Collection metadata account */
    collectionMetadata: PublicKey | Pda;
    /** Delegate record account */
    delegateRecord: PublicKey | Pda;
    /** Token record account */
    tokenRecord?: PublicKey | Pda;
    /** System program */
    systemProgram?: PublicKey | Pda;
    /** Instruction sysvar account */
    sysvarInstructions?: PublicKey | Pda;
    /** SPL Token Program */
    splTokenProgram?: PublicKey | Pda;
    /** Token Authorization Rules Program */
    authorizationRulesProgram?: PublicKey | Pda;
    /** Token Authorization Rules account */
    authorizationRules?: PublicKey | Pda;
};
export type MigrateV1InstructionData = {
    discriminator: number;
    migrateV1Discriminator: number;
    migrationType: MigrationType;
    ruleSet: Option<PublicKey>;
};
export type MigrateV1InstructionDataArgs = {
    migrationType: MigrationTypeArgs;
    ruleSet: OptionOrNullable<PublicKey>;
};
/** @deprecated Use `getMigrateV1InstructionDataSerializer()` without any argument instead. */
export declare function getMigrateV1InstructionDataSerializer(_context: object): Serializer<MigrateV1InstructionDataArgs, MigrateV1InstructionData>;
export declare function getMigrateV1InstructionDataSerializer(): Serializer<MigrateV1InstructionDataArgs, MigrateV1InstructionData>;
export type MigrateV1InstructionArgs = MigrateV1InstructionDataArgs;
export declare function migrateV1(context: Pick<Context, 'programs' | 'eddsa' | 'identity' | 'payer'>, input: MigrateV1InstructionAccounts & MigrateV1InstructionArgs): TransactionBuilder;
