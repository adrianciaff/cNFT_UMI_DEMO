/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type MintTokensToInstructionAccounts = {
    mint: PublicKey | Pda;
    token: PublicKey | Pda;
    mintAuthority?: Signer;
};
export type MintTokensToInstructionData = {
    discriminator: number;
    amount: bigint;
};
export type MintTokensToInstructionDataArgs = {
    amount: number | bigint;
};
/** @deprecated Use `getMintTokensToInstructionDataSerializer()` without any argument instead. */
export declare function getMintTokensToInstructionDataSerializer(_context: object): Serializer<MintTokensToInstructionDataArgs, MintTokensToInstructionData>;
export declare function getMintTokensToInstructionDataSerializer(): Serializer<MintTokensToInstructionDataArgs, MintTokensToInstructionData>;
export type MintTokensToInstructionArgs = MintTokensToInstructionDataArgs;
export declare function mintTokensTo(context: Pick<Context, 'programs' | 'identity'>, input: MintTokensToInstructionAccounts & MintTokensToInstructionArgs): TransactionBuilder;
