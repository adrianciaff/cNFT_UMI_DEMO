/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type CloseLutInstructionAccounts = {
    address: PublicKey | Pda;
    authority?: Signer;
    recipient: PublicKey | Pda;
};
export type CloseLutInstructionData = {
    discriminator: number;
};
export type CloseLutInstructionDataArgs = {};
/** @deprecated Use `getCloseLutInstructionDataSerializer()` without any argument instead. */
export declare function getCloseLutInstructionDataSerializer(_context: object): Serializer<CloseLutInstructionDataArgs, CloseLutInstructionData>;
export declare function getCloseLutInstructionDataSerializer(): Serializer<CloseLutInstructionDataArgs, CloseLutInstructionData>;
export declare function closeLut(context: Pick<Context, 'programs' | 'identity'>, input: CloseLutInstructionAccounts): TransactionBuilder;
