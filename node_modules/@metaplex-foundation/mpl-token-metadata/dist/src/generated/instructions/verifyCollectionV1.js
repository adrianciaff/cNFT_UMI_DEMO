"use strict";
/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.verifyCollectionV1 = exports.getVerifyCollectionV1InstructionDataSerializer = void 0;
const umi_1 = require("@metaplex-foundation/umi");
const serializers_1 = require("@metaplex-foundation/umi/serializers");
const accounts_1 = require("../accounts");
const shared_1 = require("../shared");
function getVerifyCollectionV1InstructionDataSerializer(_context = {}) {
    return (0, serializers_1.mapSerializer)((0, serializers_1.struct)([
        ['discriminator', (0, serializers_1.u8)()],
        ['verifyCollectionV1Discriminator', (0, serializers_1.u8)()],
    ], { description: 'VerifyCollectionV1InstructionData' }), (value) => ({
        ...value,
        discriminator: 52,
        verifyCollectionV1Discriminator: 1,
    }));
}
exports.getVerifyCollectionV1InstructionDataSerializer = getVerifyCollectionV1InstructionDataSerializer;
// Instruction.
function verifyCollectionV1(context, input) {
    const signers = [];
    const keys = [];
    // Program ID.
    const programId = context.programs.getPublicKey('mplTokenMetadata', 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');
    // Resolved inputs.
    const resolvedAccounts = {
        metadata: [input.metadata, true],
        collectionMint: [input.collectionMint, false],
    };
    (0, shared_1.addObjectProperty)(resolvedAccounts, 'authority', input.authority
        ? [input.authority, false]
        : [context.identity, false]);
    (0, shared_1.addObjectProperty)(resolvedAccounts, 'delegateRecord', input.delegateRecord
        ? [input.delegateRecord, false]
        : [programId, false]);
    (0, shared_1.addObjectProperty)(resolvedAccounts, 'collectionMetadata', input.collectionMetadata
        ? [input.collectionMetadata, true]
        : [
            (0, accounts_1.findMetadataPda)(context, {
                mint: (0, umi_1.publicKey)(input.collectionMint, false),
            }),
            true,
        ]);
    (0, shared_1.addObjectProperty)(resolvedAccounts, 'collectionMasterEdition', input.collectionMasterEdition
        ? [input.collectionMasterEdition, false]
        : [
            (0, accounts_1.findMasterEditionPda)(context, {
                mint: (0, umi_1.publicKey)(input.collectionMint, false),
            }),
            false,
        ]);
    (0, shared_1.addObjectProperty)(resolvedAccounts, 'systemProgram', input.systemProgram
        ? [input.systemProgram, false]
        : [
            context.programs.getPublicKey('splSystem', '11111111111111111111111111111111'),
            false,
        ]);
    (0, shared_1.addObjectProperty)(resolvedAccounts, 'sysvarInstructions', input.sysvarInstructions
        ? [input.sysvarInstructions, false]
        : [
            (0, umi_1.publicKey)('Sysvar1nstructions1111111111111111111111111'),
            false,
        ]);
    (0, shared_1.addAccountMeta)(keys, signers, resolvedAccounts.authority, false);
    (0, shared_1.addAccountMeta)(keys, signers, resolvedAccounts.delegateRecord, false);
    (0, shared_1.addAccountMeta)(keys, signers, resolvedAccounts.metadata, false);
    (0, shared_1.addAccountMeta)(keys, signers, resolvedAccounts.collectionMint, false);
    (0, shared_1.addAccountMeta)(keys, signers, resolvedAccounts.collectionMetadata, false);
    (0, shared_1.addAccountMeta)(keys, signers, resolvedAccounts.collectionMasterEdition, false);
    (0, shared_1.addAccountMeta)(keys, signers, resolvedAccounts.systemProgram, false);
    (0, shared_1.addAccountMeta)(keys, signers, resolvedAccounts.sysvarInstructions, false);
    // Data.
    const data = getVerifyCollectionV1InstructionDataSerializer().serialize({});
    // Bytes Created On Chain.
    const bytesCreatedOnChain = 0;
    return (0, umi_1.transactionBuilder)([
        { instruction: { keys, programId, data }, signers, bytesCreatedOnChain },
    ]);
}
exports.verifyCollectionV1 = verifyCollectionV1;
//# sourceMappingURL=verifyCollectionV1.js.map